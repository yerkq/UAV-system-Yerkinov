clc;
clear;
close all;

%% === System Parameters ===
m = 1.5;    % Mass [kg]
g = 9.81;   % Gravitational acceleration [m/s^2]
b = 0.5;    % Damping coefficient [N*s/m]
k = 0.3;    % Aerodynamic force constant

%% === Transfer Function of the System ===
num = [1];
den = [m b k];
G = tf(num, den);

%% === PID Controller (Auto-tuned) ===
PID_Controller = pidtune(G, 'PID');

%% === Ideal Closed-Loop System (No Delay) ===
Closed_Loop_Ideal = feedback(PID_Controller * G, 1);

%% === Real-Time Constraints Settings ===
sensor_delay = 0.01;    % 10 ms sensor processing delay
sample_time = 0.02;     % 20 ms controller update rate (~50 Hz)

% Discretize PID controller and plant
PID_Discrete = c2d(PID_Controller, sample_time, 'tustin');
G_discrete = c2d(G, sample_time, 'tustin');

% Discrete-time delay block (z^-N)
delay_steps = round(sensor_delay / sample_time);
Delay_Block = tf([zeros(1,delay_steps) 1], 1, sample_time);  % z^-N

% Closed-loop system with real-time constraints
Closed_Loop_Delayed = feedback(PID_Discrete * G_discrete * Delay_Block, 1);

%% === Step Responses Comparison ===
t_final = 5; % seconds
figure;
hold on;
step(Closed_Loop_Ideal, t_final);
step(Closed_Loop_Delayed, t_final);
title('Comparison: Ideal vs. Real-Time Constrained Systems');
legend('Ideal System', 'With Delay and Discrete Control');
xlabel('Time (s)');
ylabel('Altitude (m)');
grid on;
hold off;
